# Definir um argumento para a versão do Gradle e do JDK
ARG GRADLE_VERSION=8.0
ARG JAVA_VERSION=17
ARG APP_VERSION=1.0.0

# Usar a imagem oficial do Gradle com JDK 17 para criar um artefato de build.
# Esta será a fase de build.
FROM gradle:${GRADLE_VERSION}-jdk${JAVA_VERSION} AS build
WORKDIR /home/gradle/project

# Copiar os arquivos de configuração do Gradle e o código fonte para o contêiner.
COPY build.gradle settings.gradle /home/gradle/project/
COPY src /home/gradle/project/src

# Definir uma variável de ambiente para a versão do aplicativo
ENV APP_VERSION=${APP_VERSION}

# Executar o build do Gradle
RUN gradle build --no-daemon

# Usar a imagem oficial do Eclipse Temurin para rodar a aplicação
FROM eclipse-temurin:${JAVA_VERSION}-jre
WORKDIR /app

# Criar um usuário e grupo não root
RUN groupadd -g 1001 appgroup && useradd -u 1001 -g appgroup -m appuser

# Instalar Python e PIP
RUN apt-get update && \
    apt-get install -y python3 python3-pip && \
    ln -sf /usr/bin/python3 /usr/bin/python && \
    ln -sf /usr/bin/pip3 /usr/bin/pip && \
    pip install --upgrade pip setuptools && \
    rm -rf /var/lib/apt/lists/*

# Copiar o artefato de build do contêiner de build para o contêiner final
COPY --from=build /home/gradle/project/build/libs/*.jar /app/SouthernOceanSentinelApiApplication-${APP_VERSION}.jar

# Mudar a propriedade dos arquivos para o usuário não root
RUN chown -R appuser:appgroup /app

# Alternar para o usuário não root
USER appuser

# Expor a porta 8080
EXPOSE 8080

# Comando para rodar a aplicação
CMD ["java", "-jar", "/app/SouthernOceanSentinelApiApplication-${APP_VERSION}.jar"]
